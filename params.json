{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Google Checkout for Zen Cart","name":"Google Checkout for Zen Cart","google":"","body":"GOOGLE CHECKOUT PLUGIN FOR ZEN CART v1.5.1 - 2012-03-09\r\n\r\nINTRODUCTION\r\n============\r\nThe Google Checkout module for Zen Cart adds Google Checkout as a Checkout \r\n Module within Zen Cart.\r\nThis will allow merchants using Zen Cart to offer Google Checkout as an \r\n alternate checkout method.\r\nThe plugin provides Level 2 integration of Google Checkout with Zen Cart.\r\n\r\nPlugin features include:\r\n1. Posting shopping carts to Google Checkout\r\n2. Shipping support with Merchant Calculated Shipping Rates and \r\n    Carrier Calculation Shipping\r\n3. Tax support\r\n4. User and order updates within Zen Cart\r\n5. Order processing using Zen Cart Admin UI \r\n6. Order Totals Support\r\n7. Digital Delivery support\r\n\r\nREQUIREMENTS\r\n============\r\nZen Cart v1.3.8, v1.3.9a-h and v1.5.0\r\nPHP3 or PHP4 or PHP5 with cURL(libcurl) installed and enabled\r\n\r\nINSTALLATION NOTES\r\n==================\r\n1. Follow instructions contained in the INSTALLATION file.\r\n2. Verify the installation from the Admin site and selecting MODULES->PAYMENTS \r\n    and checking if Google Checkout is listed as a payment option.\r\n3. Set the file attribute to 777 for /googlecheckout/logs/response_error.log and \r\n    /googlecheckout/logs/response_message.log files.\r\n4. Go to http://<url-site-url>/googlecheckout/responsehandler.php\r\n    If you get a 'Invalid or not supported Message', 'Fail to get HTTP Authentication',\r\n    or a request for User and Password, go to the next section.\r\n    If you get any errors,  you must correct all errors before proceeding.  \r\n    Refer to the troubleshooting section below or go to the support forum for help.\r\n\r\n\r\nSETUP ON ADMIN UI\r\n=================\r\nSelect and install the Google Checkout payment module. The following are some \r\nof the fields you can update:\r\n\r\n0. Installed GC module version\r\n1. Enable/Disable: Enable this to use Google Checkout for your site.\r\n\r\n2. Operation Mode: Test your site with Google Checkout's sandbox server before \r\n   migrating to production. You will need it signup for a separate Google Checkout \r\n   sandbox account at http://sandbox.google.com/checkout/sell. Your sandbox account\r\n   will have a different Merchant ID and Merchant Key. When you are ready to run \r\n   against the production server, remember to update your merchant ID and key \r\n   when migrating.\r\n   \r\n3. Merchant ID and Merchant Key:(Mandatory) If any of these are not set and the \r\n   module is enabled, a disabled (gray) Checkout button appears on the Checkout \r\n   page. Set these values from your seller Google account under the \r\n   Settings->Integration tab. Separate Sandbox and Production.\r\n   \r\n4. .htaccess Basic Authentication Mode with PHP over CGI? If your site is \r\n   installed on a PHP CGI you must disable Basic Authentication over PHP. \r\n   To avoid spoofed messages (only if this feature is enabled) reaching \r\n   responsehandler.php, set the .htaccess file with the script linked \r\n   (http://your-site/admin/htaccess.php). \r\n   Set permission 777 for http://your-site/googlecheckout/ before running \r\n   the script. Remember to turn back permissions after creating the files.\r\n   \r\n5. Merchant Calculation Mode of Operation: Sets Merchant calculation URL for \r\n   Sandbox environment. Could be HTTP or HTTPS. (Checkout production environment \r\n   always requires HTTPS.)\r\n   \r\n6. Disable Google Checkout for Virtual Goods?: This configuration is enabled and\r\n    there is any virtual good in the cart the Google Checkout button will be\r\n    shown disabled.\r\n    (double check http://checkout.google.com/seller/policies.html#4)\r\n    \r\n7. Allow US PO BOX shipping. Setted to false, you won't ship to any PO address\r\n    in the US.\r\n\r\n8. Default Values for Real Time Shipping Rates: Set your default values for \r\n   all merchant calculated shipping rates. This values will be used if for any \r\n   reason Google Checkout cannot reach your API callback to calculate the \r\n   shipping price.\r\n\r\n9. GoogleCheckout Carrier Calculated Shipping. Set if you want or not to use CCS.\r\n    Note that if you enable CCS, all Merchant Calculation Modules will be IGNORED\r\n    for GC orders. Only Flat Rate shippings will be included with CCS.\r\n\r\n10. Carrier Calculater Shipping Configuration. Set Default Values, Fix and \r\n    Variable charge for each specific CCS method. \r\n    The DV contains the default shipping cost for a carrier-calculated-shipping \r\n     option. If Google is unable to obtain the carrier's shipping rate for a \r\n     shipping option, the buyer will still have the option of selecting that \r\n     shipping option and paying the DV value to have the order shipped.\r\n     http://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Carrier_Calculated_Shipping.html#tag_price\r\n    The Fix value allows you to specify a fixed charge that will be added to the\r\n     total cost of an order.\r\n     http://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Carrier_Calculated_Shipping.html#tag_additional-fixed-charge\r\n    The Variable Charge pecifies a percentage amount by which a carrier-calculated\r\n     shipping rate will be adjusted. The tag's value may be positive or negative.\r\n     http://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Carrier_Calculated_Shipping.html#tag_additional-variable-charge-percent\r\n    \r\n    Set Def. Value to 0 to disable the method\r\n\r\n10. Rounding Policy Mode and Rounding Policy Rule: Determines how Google Checkout\r\n     will do rounding in prices.\r\n     US default: rounding rule TOTAL, rounding mode is HALF_EVEN\r\n     UK default: rounding rule PER_LINE, rounding mode is HALF_UP\r\n\r\n     More info:\r\n     http://code.google.com/apis/checkout/developer/Google_Checkout_Rounding_Policy.html\r\n\r\n11. Cart Expiration Time: if different from NONE, this postive integrer will set \r\n     an expiration time from the creation of the GC button to X minutes. Where X\r\n     is the value set. This will prevent buyers to use carts that may be deprecated\r\n     or with wrong settings. Default is NONE. Take in care that the time in your\r\n     server may not be syncronized with GC servers, so if you set short expiration\r\n     times this may not be so accurate.     \r\n\r\n12. Also send Notification with ZenCart, if enabled, will send an email using the \r\n     ZC internal email system if the comment in an order is larger than 254 \r\n     chars, limit for a google send message. If this happens a warning will be \r\n     shown in the Admin UI. It will also send emails to the merchant account \r\n     when orders states are changed in the Admin UI.\r\n\r\n13. Google Analytics Id: Add google analytics to your e-commerce. Now there is a \r\n     feature in GA to integrate easily with any e-commerce with GoogleCheckout.\r\n     More info: See below \"Enabling E-Commerce Reporting for Google Analytics\".\r\n\r\n14. 3rd Party Tracking: Do you want to integrate the module 3rd party tracking? \r\n     Add the tracker URL, NONE to disable.\r\n    More info:\r\n    http://code.google.com/apis/checkout/developer/checkout_pixel_tracking.html\r\n\r\n15. Google Checkout restricted product categories: Insert here the Ids of all the \r\n     product categories that you want to exclude from the Google Checkout. \r\n     Separate them using commas (ie. \"1, 3,56 , 32\").\r\n     Double check Google Policy:\r\n     http://checkout.google.com/support/sell/bin/answer.py?answer=46174&topic=8681\r\n     http://checkout.google.com/seller/policies.html#4\r\n\r\n16. Continue shopping URL: The URL customers will be redirected to if they \r\n     follow the link back to your site after checkout. \r\n     (http://your-site/zencart_dir/index.php?main_page=<input data>)\r\n     Note:Use GC_return for special page that will show all the purchased items \r\n      with Google Checkout\r\n\r\nYour Google Checkout setup page is correct if, upon viewing it, a non-disabled \r\nGoogle Checkout button appears. Double check the INSTALLATION file for more info\r\n\r\nEnabling E-Commerce Reporting for Google Analytics\r\n==================================================\r\nTo track Google Checkout orders, you must enable e-commerce reporting for your \r\nwebsite in your Google Analytics account. The following steps explain how you \r\nenable e-commerce reporting for your website:\r\n\r\n   1. Log in to your Google Analytics account.\r\n   2. Click the Edit link next to the profile you want to enable. This link \r\n      appears in the Settings column.\r\n   3. On the Profile Settings page, click the Edit link in the Main Website \r\n      Profile Information box.\r\n   4. Change the selected E-Commerce Website radio button from No to Yes.\r\nMore info: \r\nhttp://code.google.com/apis/checkout/developer/checkout_analytics_integration.html\r\n\r\nNote for 3rd party tracking: Actual configuration supports just one 3rd party \r\n tracking Co. And some modification maybe needed to do in the code for \r\n specific trakers.\r\n Read:\r\n http://code.google.com/apis/checkout/developer/checkout_pixel_tracking.html\r\n And change the code here:\r\n  googlecheckout/gcheckout.php\r\n Maping works this way:\r\n  $tracking_attr_types = array(\r\n                              'GC_attr_type1' => '3rd_attr_name1',\r\n                              'GC_attr_type2' => '3rd_attr_name2',\r\n                              ...\r\n                              );\r\n  Will be traduced to:\r\n  <parameters>\r\n    <url-parameter name=\"3rd_attr_name1\" type=\"GC_attr_type1\"/>\r\n    <url-parameter name=\"3rd_attr_name2\" type=\"GC_attr_type2\"/>\r\n    ...\r\n  </parameters>\r\n  \r\nDIGITAL DELIVERY\r\n================\r\nAll products marked as maked as \"Product is Virtual\" will be included in the \r\n digital delivery API. This means that at the end of the GC transaction a link\r\n to the ZC checkout_success page will be shown as well as a description of the \r\n product.\r\nIf the whole cart is virtual, no shipping to: will be shown in the GC Place \r\n Order Page. \r\nNote: If the cart is virtual but has some custom order_totals (low_orderFee, \r\n group_discount, etc), a notice saying an \"Email will sent\" will be show for each\r\n order total in the GC confirmation page. This is a limitation of GC API for\r\n supporting custom OT and digital delivery.\r\n\r\nMERCHANT CALCULATED SHIPPING\r\n============================\r\nIn order to use this module you must have some Real Time Shipping provider,\r\n such as USPS or FedEx. This Module must be activated and configured in\r\n Modules->Shipping. For each enabled module you'll have to set the default\r\n values in the Google Checkout Admin UI.\r\nThis Value will be used if for any reason Google Checkout cannot reach your\r\n API callback to calculate the shipping price. \r\n\r\nThe available shipping methods for each shipping provider must be configured\r\n in /googlecheckout/shipping_methods.php in the mc_shipping_methods\r\n variable. If you want to disable one or more methods, just comment them out.\r\nBe aware that if you mix flat rate and real time rates, both will be taken\r\n as merchant-calculated-shipping. \r\n\r\nScript to create new shipping methods\r\n\thttp://your-site/zencart_dir/googlecheckout/shipping_generator\r\nMore Info: \r\n\thttp://your-site/zencart_dir/googlecheckout/shipping_generator/README\r\n\r\nCARRIER CALCULATED SHIPPING\r\n===========================\r\nThis feature allows merchants to get real time quotes without any effort. All\r\n calculation are done by the GC servers. You only need to specify the shipping\r\n methods you want to provide. \r\n Google supports the carrier-calculated shipping feature for three carriers: \r\n FedEx, UPS and the U.S. Postal Service (USPS)\r\n\r\nYou cannot offer carrier-calculated shipping methods and merchant-calculated\r\n shipping methods for the same order. However, you can offer carrier-calculated\r\n shipping methods and still use the Merchant Calculations API to calculate taxes \r\n and adjustments for coupons and gift certificates.\r\n \r\nNote: Only US Domestic shipping address are allowed right now. If shipping \r\n       address is Int'l only Flat Rate shippings will be shown.\r\n\r\nMore info:\r\n http://code.google.com/apis/checkout/developer/Google_Checkout_XML_API_Carrier_Calculated_Shipping.html#Process\r\n\r\nCOUPONS\r\n=======\r\nYou can now use coupons with this module. Just add coupons in the Admin UI,\r\n and the user can addlogs/ them in his order. This is restinged to just one\r\n coupon per order as Zen cart standards, aldo GC supports many. \r\n\r\nTRACKING USERS AND ORDERS\r\n=========================\r\nIn order to provide this support (as required for Level 2 integration), update\r\n the API callback request field in the seller account to \r\n https://<url-site-url>/googlecheckout/responsehandler.php . \r\n Note that the production Checkout server requires an SSL callback site.\r\nThe Sandbox server accepts non SSL callback URLs.\r\n\r\nWithin the Google Checkout panel, go to Settings > Integration. Set the\r\nCallback contents to Notification as XML, rather than Notification Serial\r\nNumber.\r\n\r\nView your Google Checkout customers and their orders in the Reports tab. \r\nFor each order, the default starting state is Google New. \r\nGC Orders States in ZC Admin\r\n\r\n(the instructions below assume you have enabled \"Automatically authorize and\r\ncharge the buyer's credit card\" in your GC merchant account Settings >\r\nPreferences).\r\n\r\n1. When an order for a regular (non-download) product is submitted  through\r\nGC the order state in ZC admin will be auto set to \"Google_Processing\". When\r\nfollowing-up on (shipping) these orders you will need to change the order\r\nstatus to \"Google_Shipped\".\r\n\r\n2. When an order for a download product is submitted via GC, the order\r\nstatus in ZC admin will be auto set to \"Google_Shipped\" (even if customer\r\nhas attempted to download or not). When following-up on download orders keep\r\nthe\r\nstatus \"Google_Shipped\", no need to change the state.\r\n\r\n3.. Refunding/canceling \"total\" GC orders works from within ZC admin.\r\n\r\na. If you have not yet changed a non-download order from \"Google_Processing\"\r\nto \"Google_Shipped\" you can directly cancel/refund the TOTAL order by\r\nselecting \"Google_Canceled\" (but do NOT set to \"Google_Refunded\").\r\n\r\nChanging the state to \"Google_Cancelled\" will auto refund 100% of\r\ntransaction AND cancel the order at the same time. So there is no need to\r\nlogin to GC Merchant account to process the TOTAL refund.\r\n\r\nb. Also after an item is shipped you can refund the TOTAL amount of order by\r\n choosing \"Google_Canceled\" (but as stated above do NOT set to\r\n\"Google_Refunded\").\r\n\r\nc. However if you want to only refund a PORTION of the order amount (for\r\nexample if customer ordered two items and want to refund amount for only one\r\nitem) then you will need to log in to your GC Merchant amount and process\r\nthe partial refund. (Then Google will automatically change the order status\r\nin ZC admin to \"Google_Refunded\" or \"Google_Shipped and\r\nRefunded\", and you won't have to change the state in ZC admin.\r\n\r\nd. Understanding the above then you should not ever need to apply\r\n\"Google_Refunded\" or \"Google_Shipped and Refunded\". These states are usually\r\nreserved for Google use only.\r\n\r\nYou can add a Tracking Number in the state change from GoogleProcessing to\r\nGoogleShipped\r\nA text field and a combo with the shipping providers will be show when the order\r\nis in the GoogleProcessing state.\r\n\r\nAny comments added during state change will be sent to the buyer account page\r\n if you have selected the Append Comments option.\r\n\r\nAll statechanges are added as notes in the Admin UI\r\nAll request and response messages will be logged to the file\r\ngooglecheckout/logs/response_message.log.\r\n\r\nRefunds are added as new order totals in each order as well as part of the\r\nhistory of the order.\r\n\r\nThe same for cancellations\r\n\r\nCheck states.jpg for the states machine diagram. \r\n\r\nPROJECT HOME\r\n============\r\nTo check out the latest release or to report issues, go to\r\n https://github.com/mattclements/Google-Checkout-for-Zencart\r\n\r\n\r\nGROUP DISCUSSIONS\r\n=================\r\nTo meet other developers and merchants who have integrated Google Checkout\r\n with Zen Cart and to discuss any topics related to integration of Google \r\n Checkout with Zen Cart, go to \r\n https://github.com/mattclements/Google-Checkout-for-Zencart/issues\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nMOST COMMON MISTAKES\r\n====================\r\n1. Make sure you set the file attribute to 777 for \r\n    /googlecheckout/logs/response_error.log and /googlecheckout/logs/response_message.log files.\r\n2. Set your Google callback url to https://<url-site-url>/googlecheckout/responsehandler.php\r\n   In Sandbox, HTTPS is not required.\r\n   In Production mode, HTTPS is required.\r\n   Set the correct option in the Google Checkout Admin UI\r\n  Links for supported SSL certificates:\r\n    http://www.google.com/checkout/ssl-certificates\r\n    http://checkout.google.com/support/sell/bin/answer.py?answer=57856\r\n3. Make sure you are using the correct combination of Merchant ID and \r\n   Merchant Key. Remember that Sandbox and Production Mode have different ones.\r\n4. The folder YOUR_TEMPLATE in the package refers to the folder that contains\r\n your templates, you must put the files in /includes/templates/YOUR_TEMPLATE/ \r\n in your own templates dir there you should see the GC buy button.\r\n\t\r\nTROUBLE SHOOTING\r\n================\r\n1. Problem: Fatal error: Call to undefined function: getallheaders() error.\r\n\tSolution: You webhosting company does not have the function getallheaders()\r\n\t enable on your webserver. Fixed in v1.0.5\r\n2. Problem: /public_html/googlecheckout/logs/response_message.log) [function.fopen]:\r\n    failed to open stream: Permission denied.\r\n\tSolution: Set the file attribute to 777 for /googlecheckout/logs/response_error.log\r\n\t and /googlecheckout/logs/response_message.log files.\r\n3. Problem: Test order shows up in Google but not admin.\r\n\tSolution: There is an error somewhere in the file /googlecheckout/responsehandler.php\r\n4. Problem: <error-message>Malformed URL component: \r\n   expected id: (\\d{10})|(\\d{15}), but got 8***********4 </error-message>\r\n\tSolution: You have an extra space after your Google merchant id. Go to\r\n\t Admin->payment.  Edit Googlecheckout module.  Extra space will disappear.\r\n\t Click update button.\r\n5. Problem: <error-message>No seller found with id 7************8</error-message>\r\n\tSolution: Wrong merchant id.  Sandbox merchant id can only be use with sandbox\r\n\t accounts.  Sandbox and Live mode use different merchant id. \r\n6. Problem: sun.security.validator.ValidatorException: PKIX path building\r\n    failed: sun.security.provider.certpath.SunCertPathBuilderE xception: unable\r\n    to find valid certification path to requested target\r\n\tSolution: Your SSL certificate is not accepted by Google Checkout.\r\n\tLinks for supported SSL certificates:\r\n    http://www.google.com/checkout/ssl-certificates\r\n    http://checkout.google.com/support/sell/bin/answer.py?answer=57856\r\n7. Problem: <error-message>Bad Signature on Cart</error-message>\r\n\tSolution: Incorrect Merchant key.\r\n8. Problem: (/public_html/googlecheckout/logs/response_error.log) \r\n    Tue Nov 28 8:56:21 PST 2006:- Shopping cart not obtained from session. \r\n   Solution: Set to False admin->configuration->session->Prevent Spider\r\n    Sessions configuration (Thx dawnmariegifts, beta tester)\r\n   Side effects: You'll see spiders as active users.\r\n   Solution 2 (Recommended): Remove any string like 'jakarta' in the includes/spider.txt\r\n9. Problem:\r\n    Warning: main(admin/includes/configure.php) [function.main]: failed to open \r\n     stream: No such file or directory in /public_html/googlecheckout/gcheckout.php\r\n     on line 33\r\n\t\tFatal error: main() [function.require]: Failed opening required \r\n     'admin/includes/configure.php' (include_path='.:/usr/lib/php:/usr/local/lib/php')\r\n     in /public_html/googlecheckout/gcheckout.php on line 33\r\n   Solution:\r\n\t\t\tChange googlecheckout/gcheckout.php Line 33 'admin' for the modified admin\r\n\t\t\t directory\r\n      require_once('admin/includes/configure.php');   \r\n10. IIS Note::  For HTTP Authentication to work with IIS, \r\n\t\tthe PHP directive cgi.rfc2616_headers must be set to 0 (the default value).\r\n\t\tWill use the $_SERVER['HTTP_AUTHORIZATION'] header\r\n11. No shipping is shown in the Cart.\r\n     Have you checked that this constant have the correct value set in the includes/configure.php?\r\n     DIR_FS_CATALOG and DIR_WS_MODULES\r\n     Try adding an echo in googlecheckout/gcheckout.php\r\n       echo $module_directory = DIR_FS_CATALOG . DIR_WS_MODULES . 'shipping/';\r\n     and in the shopping_cart.php page see if the string u see is the correct \r\n     dir where the shipping file are. \t\r\nKNOWN BUGS -\r\n==========\r\n(Report bugs at \r\n https://github.com/mattclements/Google-Checkout-for-Zencart/issues)\r\n\r\nCHANGELOG\r\n=========\r\nSee CHANGELOG file. \t \t\r\n"}